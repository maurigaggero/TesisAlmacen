@page "/caja"
@inject CajaService CajaService
@inject NavigationManager NavigationManager
@inject UsuarioService UsuarioService
@inject SalidaDineroService SalidaDineroService
@inject IJSRuntime JS

<div class="d-flex justify-content-between mb-1" id="header">
    <h3>Caja del día</h3>
    <div>
        <div class="btn-group">
            <a href="getcajas" class="btn btn-sm btn-primary">
                <i class="oi oi-arrow-circle-left"></i> Mostrar todas las cajas
            </a>
            <a href="caja/abrir" class="btn btn-sm btn-primary">
                <i class="oi oi-check"></i> Abrir Nueva Caja
            </a>
            <button class="btn btn-sm btn-secondary" @onclick="ModalListaSalidas">
                Salidas de Dinero
            </button>
        </div>
    </div>
</div>

@if (ingreso != null)
{
    <style>
        .zoom {
            border-radius: 3px;
            transition: transform .2s
        }

            .zoom:hover {
                transform: scale(1.05);
                box-shadow: 1px 8px 20px grey;
                -webkit-transition: box-shadow .6s ease-in;
            }
    </style>

    <div class="d-flex justify-content-center row my-2">
        <div class="card zoom col-2 mx-2 px-2">
            <div class="card-body">
                <b>Efectivo: </b> $@ingreso.Efectivo
            </div>
        </div>
        <div class="card zoom col-2 mx-2 px-2">
            <div class="card-body">
                <b>Tarjeta crédito: </b> $@ingreso.TarjetaCredito
            </div>
        </div>
        <div class="card zoom col-2 mx-2 px-2">
            <div class="card-body">
                <b>Tarjeta débito: </b> $@ingreso.TarjetaDebito
            </div>
        </div>
        <div class="card zoom col-2 mx-2 px-2">
            <div class="card-body">
                <b>Cheque: </b> $@ingreso.Cheque
            </div>
        </div>
        <div class="card zoom col-2 mx-2 px-2">
            <div class="card-body">
                <b>Transferencia: </b> $@ingreso.Transferencia
            </div>
        </div>
    </div>
}

<br />
<br />


<div>
    @if (caja != null)
    {
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Fecha</th>
                    <th>Empleado</th>
                    <th>Monto Apertura</th>
                    <th>Monto Actual</th>
                    <th>Monto Cierre</th>
                    <th>Cierre de Caja</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@caja.Fecha.ToString("dd/MM/yyyy")</td>
                    <td>@caja.Empleado.Nombre</td>
                    <td>$@caja.Apertura</td>
                    <td>$@caja.Actual</td>
                    <td>$@caja.Cierre</td>
                    <td>
                        <a class="btn btn-sm btn-outline-danger" href="caja/cerrar/@caja.Id"><i class="oi oi-x"></i></a>
                    </td>
                </tr>
            </tbody>
        </table>
    }
</div>

<br />

<ModalSalidasDinero caja="caja"></ModalSalidasDinero>


@code {
    private CajaModel caja { get; set; }
    private IngresoModel ingreso { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var result = await UsuarioService.GetSesion();
        if (result == null)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            caja = await CajaService.GetUltimo();
            ingreso = await CajaService.GetIngresos();
            if (caja.Fecha.Date != DateTime.Now.Date || caja.FechaCierre != null)
            {
                NavigationManager.NavigateTo("/caja/abrir");
            }
        }
    }

    void ModalListaSalidas()
    {
        JS.InvokeVoidAsync("levantaModal", "#modalSalidasDinero");
    }
}
