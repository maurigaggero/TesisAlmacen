@inject NavigationManager NavigationManager
@inject VentaService VentaService
@inject ArticuloService ArticuloService
@inject IJSRuntime JS


<EditForm Model="@venta" OnValidSubmit="@OnValidSubmit">
    <div id="header" class="form-row">
        <div class="form-group col-md-4">
            <label>Fecha</label>
            <InputDate @bind-Value="@venta.Fecha" class="form-control" />
            <ValidationMessage For="@(() => venta.Fecha)" />
        </div>
        <div class="form-group col-md-4">
            <label>Forma de Pago</label>
            <InputText @bind-Value="@venta.FormaPago" class="form-control" />
            <ValidationMessage For="@(() => venta.FormaPago)" />
        </div>
        <div class="form-group col-md-4">
            <label>Cliente</label>
            <InputNumber @bind-Value="@venta.Cliente_Id" class="form-control" />
            <ValidationMessage For="@(() => venta.Cliente_Id)" />
        </div>
    </div>


    <button type="submit" class="btn btn-block btn-success">
        <i class="oi oi-check "></i>
        <text style="color:white"> @TextBotonSubmit</text>
    </button>
</EditForm>

<div id="detalle">
    <div id="buscador" class="p-2">
        <BlazoredTypeahead SearchMethod="BuscarArticulos" @bind-Value="articuloSeleccionado">
            <SelectedTemplate>@context.Nombre</SelectedTemplate>
            <ResultTemplate>@context.Nombre</ResultTemplate>
        </BlazoredTypeahead>
    </div>

    @*    <div class="form-group col-md-4">
        <label>Fecha</label>
        <input @bind="@articuloSeleccionado.Nombre" class="form-control" />
        <ValidationMessage For="@(() => articuloSeleccionado.Nombre)" />
        </div>
        <div class="form-group col-md-4">
        <label>Forma de Pago</label>
        <input @bind="@detalleVenta.Cantidad" class="form-control" />
        <ValidationMessage For="@(() => detalleVenta.Cantidad)" />
        </div>
        <div class="form-group col-md-4">
        <label>Cliente</label>
        <input @bind="@articuloSeleccionado.Precio_Unit" class="form-control" />
        <ValidationMessage For="@(() => articuloSeleccionado.Precio_Unit)" />
        </div>*@

    <table class="table table-hover">
        <thead class="thead thead-dark">
            <tr>
                <th>#</th>
                <th>Articulo</th>
                <th>Cantidad</th>
                <th>Precio</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var d in venta.Detalle)
            {
                <tr>
                    <td></td>
                    <td>@d.Articulo.Nombre</td>
                    <td>@d.Cantidad</td>
                    <td>$@d.Precio</td>
                </tr>
            }
        </tbody>
    </table>
</div>


@code {
    [Parameter] public Ventas venta { get; set; } = new Ventas();
    [Parameter] public string TextBotonSubmit { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private ArticuloModel articuloSeleccionado;
    private IEnumerable<ArticuloModel> articulos;

    private DetalleVentas detalleVenta;

    protected override async Task OnInitializedAsync()
    {
        articulos = await ArticuloService.GetAll();
        venta.FormaPago = "Efectivo";
        venta.Fecha = DateTime.Now;
    }

    private async Task<IEnumerable<ArticuloModel>> BuscarArticulos(string busqueda)
    {
        return await Task.FromResult(articulos.Where(x => x.Nombre.ToUpper().Contains(busqueda.ToUpper())).ToList());
    }
}